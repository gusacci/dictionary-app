{"ast":null,"code":"var _jsxFileName = \"/Users/anastasia/Desktop/sheCodes/dictionary-app/src/Results.jsx\";\nimport React from \"react\";\nimport Meaning from \"./Meaning\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Results = props => {\n  if (props.results) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.results.word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), props.results.phonetics.map(function (phonetic, index) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Phonetic \"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 18\n        }, this);\n      }), props.results.meanings.map(function (meaning, index) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Meaning, {\n            meaning: meaning\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  }\n};\n\n_c = Results;\nexport default Results;\n\nvar _c;\n\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","Meaning","Results","props","results","word","phonetics","map","phonetic","index","meanings","meaning"],"sources":["/Users/anastasia/Desktop/sheCodes/dictionary-app/src/Results.jsx"],"sourcesContent":["import React from \"react\";\nimport Meaning from \"./Meaning\";\n\nconst Results = (props) => {\n  if (props.results) {\n    return (\n      <div>\n        <h2>{props.results.word}</h2>\n        {props.results.phonetics.map(function (phonetic, index) {\n          return <div key={index}>Phonetic </div>;\n        })}\n        {props.results.meanings.map(function (meaning, index) {\n          return (\n            <div key={index}>\n              <Meaning meaning={meaning} />\n            </div>\n          );\n        })}\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default Results;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;EACzB,IAAIA,KAAK,CAACC,OAAV,EAAmB;IACjB,oBACE;MAAA,wBACE;QAAA,UAAKD,KAAK,CAACC,OAAN,CAAcC;MAAnB;QAAA;QAAA;QAAA;MAAA,QADF,EAEGF,KAAK,CAACC,OAAN,CAAcE,SAAd,CAAwBC,GAAxB,CAA4B,UAAUC,QAAV,EAAoBC,KAApB,EAA2B;QACtD,oBAAO;UAAA;QAAA,GAAUA,KAAV;UAAA;UAAA;UAAA;QAAA,QAAP;MACD,CAFA,CAFH,EAKGN,KAAK,CAACC,OAAN,CAAcM,QAAd,CAAuBH,GAAvB,CAA2B,UAAUI,OAAV,EAAmBF,KAAnB,EAA0B;QACpD,oBACE;UAAA,uBACE,QAAC,OAAD;YAAS,OAAO,EAAEE;UAAlB;YAAA;YAAA;YAAA;UAAA;QADF,GAAUF,KAAV;UAAA;UAAA;UAAA;QAAA,QADF;MAKD,CANA,CALH;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAeD,CAhBD,MAgBO;IACL,OAAO,IAAP;EACD;AACF,CApBD;;KAAMP,O;AAsBN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}